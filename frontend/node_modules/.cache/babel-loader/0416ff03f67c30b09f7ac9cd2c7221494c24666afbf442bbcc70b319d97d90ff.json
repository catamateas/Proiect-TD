{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cata\\\\Desktop\\\\Proiect-TD\\\\frontend\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  listId,\n  onAdd\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      toast.error(\"Don't leave it empty\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/api/todolists/${listId}/todos`, {\n        title\n      });\n      onAdd(response.data);\n      setTitle('');\n      toast.success('Todo added successfully');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n      toast.error('Error adding todo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"todoTitle\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Enter a new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","axios","Form","Button","toast","jsxDEV","_jsxDEV","TodoForm","listId","onAdd","_s","title","setTitle","handleSubmit","e","preventDefault","trim","error","response","post","data","success","console","onSubmit","className","children","Group","controlId","Control","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cata/Desktop/Proiect-TD/frontend/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TodoForm = ({ listId, onAdd }) => {\r\n    const [title, setTitle] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!title.trim()) {\r\n            toast.error(\"Don't leave it empty\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(`http://localhost:8080/api/todolists/${listId}/todos`, { title });\r\n            onAdd(response.data);\r\n            setTitle('');\r\n            toast.success('Todo added successfully');\r\n        } catch (error) {\r\n            console.error('Error adding todo:', error);\r\n            toast.error('Error adding todo');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"mb-4\">\r\n            <Form.Group controlId=\"todoTitle\">\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Enter a new todo\"\r\n                />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Add Todo</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default TodoForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MACfZ,KAAK,CAACa,KAAK,CAAC,sBAAsB,CAAC;MACnC;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,uCAAuCX,MAAM,QAAQ,EAAE;QAAEG;MAAM,CAAC,CAAC;MACnGF,KAAK,CAACS,QAAQ,CAACE,IAAI,CAAC;MACpBR,QAAQ,CAAC,EAAE,CAAC;MACZR,KAAK,CAACiB,OAAO,CAAC,yBAAyB,CAAC;IAC5C,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZK,OAAO,CAACL,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1Cb,KAAK,CAACa,KAAK,CAAC,mBAAmB,CAAC;IACpC;EACJ,CAAC;EAED,oBACIX,OAAA,CAACJ,IAAI;IAACqB,QAAQ,EAAEV,YAAa;IAACW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAC1CnB,OAAA,CAACJ,IAAI,CAACwB,KAAK;MAACC,SAAS,EAAC,WAAW;MAAAF,QAAA,eAC7BnB,OAAA,CAACJ,IAAI,CAAC0B,OAAO;QACTC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,KAAM;QACboB,QAAQ,EAAGjB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACb/B,OAAA,CAACH,MAAM;MAAC0B,IAAI,EAAC,QAAQ;MAAAJ,QAAA,EAAC;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAAC3B,EAAA,CAjCIH,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}