{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cata\\\\Desktop\\\\Proiect-TD\\\\frontend\\\\src\\\\components\\\\TodoListManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TodoList from './TodoList';\nimport './TodoListManager.css';\nimport { FaTrash, FaPlus, FaSearch } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListManager = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/todolists');\n      console.log('Response from server:', response.data);\n      setLists(response.data);\n    } catch (error) {\n      console.error('Error fetching todo lists:', error);\n    }\n  };\n  const createList = async () => {\n    if (newListName.trim() === '') {\n      alert(\"Don't leave it empty\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/api/todolists', {\n        name: newListName\n      });\n      setNewListName('');\n      fetchLists();\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n  const deleteList = async listId => {\n    if (window.confirm('Are you sure you want to delete this list?')) {\n      try {\n        await axios.delete(`http://localhost:8080/api/todolists/${listId}`);\n        fetchLists();\n      } catch (error) {\n        console.error('Error deleting list:', error);\n      }\n    }\n  };\n  const filteredLists = Array.isArray(lists) ? lists.filter(list => list.name.toLowerCase().includes(searchTerm.toLowerCase())) : [];\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleNewListNameChange = event => {\n    setNewListName(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-items\",\n        children: filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedListId(list.id),\n          className: \"list-item\",\n          children: [list.name, /*#__PURE__*/_jsxDEV(FaTrash, {\n            className: \"delete-icon\",\n            onClick: () => deleteList(list.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, list.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New list name\",\n          value: newListName,\n          onChange: handleNewListNameChange,\n          className: \"new-list-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createList,\n          className: \"create-list-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 81\n          }, this), \" Create\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: selectedListId && /*#__PURE__*/_jsxDEV(TodoList, {\n        listId: selectedListId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoListManager, \"t5pP72x9J0+cX/EAxuAzjJjM1sU=\");\n_c = TodoListManager;\nexport default TodoListManager;\nvar _c;\n$RefreshReg$(_c, \"TodoListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoList","FaTrash","FaPlus","FaSearch","jsxDEV","_jsxDEV","TodoListManager","_s","lists","setLists","newListName","setNewListName","selectedListId","setSelectedListId","searchTerm","setSearchTerm","fetchLists","response","get","console","log","data","error","createList","trim","alert","post","name","deleteList","listId","window","confirm","delete","filteredLists","Array","isArray","filter","list","toLowerCase","includes","handleSearchChange","event","target","value","handleNewListNameChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Cata/Desktop/Proiect-TD/frontend/src/components/TodoListManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TodoList from './TodoList';\r\nimport './TodoListManager.css';\r\nimport { FaTrash, FaPlus, FaSearch } from 'react-icons/fa';\r\n\r\nconst TodoListManager = () => {\r\n    const [lists, setLists] = useState([]);\r\n    const [newListName, setNewListName] = useState('');\r\n    const [selectedListId, setSelectedListId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const fetchLists = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/todolists');\r\n            console.log('Response from server:', response.data);\r\n            setLists(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching todo lists:', error);\r\n        }\r\n    };\r\n\r\n    const createList = async () => {\r\n        if (newListName.trim() === '') {\r\n            alert(\"Don't leave it empty\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/todolists', { name: newListName });\r\n            setNewListName('');\r\n            fetchLists();\r\n        } catch (error) {\r\n            console.error('Error creating list:', error);\r\n        }\r\n    };\r\n\r\n    const deleteList = async (listId) => {\r\n        if (window.confirm('Are you sure you want to delete this list?')) {\r\n            try {\r\n                await axios.delete(`http://localhost:8080/api/todolists/${listId}`);\r\n                fetchLists();\r\n            } catch (error) {\r\n                console.error('Error deleting list:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const filteredLists = Array.isArray(lists) ? lists.filter(list =>\r\n        list.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    ) : [];\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleNewListNameChange = (event) => {\r\n        setNewListName(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-list-manager\">\r\n            <aside className=\"sidebar\">\r\n                <div className=\"search-bar\">\r\n                    <FaSearch />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search...\"\r\n                        value={searchTerm}\r\n                        onChange={handleSearchChange}\r\n                        className=\"search-input\"\r\n                    />\r\n                </div>\r\n                <ul className=\"list-items\">\r\n                    {filteredLists.map(list => (\r\n                        <li key={list.id} onClick={() => setSelectedListId(list.id)} className=\"list-item\">\r\n                            {list.name}\r\n                            <FaTrash className=\"delete-icon\" onClick={() => deleteList(list.id)} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <div className=\"create-list\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"New list name\"\r\n                        value={newListName}\r\n                        onChange={handleNewListNameChange}\r\n                        className=\"new-list-input\"\r\n                    />\r\n                    <button onClick={createList} className=\"create-list-button\"><FaPlus /> Create</button>\r\n                </div>\r\n            </aside>\r\n            <main>\r\n                {selectedListId && (\r\n                    <TodoList listId={selectedListId} />\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}