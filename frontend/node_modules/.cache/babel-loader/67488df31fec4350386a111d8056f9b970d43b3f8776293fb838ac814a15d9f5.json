{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cata\\\\Desktop\\\\Proiect-TD\\\\frontend\\\\src\\\\components\\\\TodoListManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TodoList from './TodoList';\nimport './TodoListManager.css';\nimport { Sidebar, Menu, MenuItem, SubMenu, useProSidebar, ProSidebarProvider } from 'react-pro-sidebar';\nimport { FaTrash, FaPlus, FaSearch } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListManager = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/todolists');\n      console.log('Response from server:', response.data);\n      setLists(response.data);\n    } catch (error) {\n      console.error('Error fetching todo lists:', error);\n    }\n  };\n  const createList = async () => {\n    if (newListName.trim() === '') {\n      alert(\"Don't leave it empty\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/api/todolists', {\n        name: newListName\n      });\n      setNewListName('');\n      fetchLists();\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n  const deleteList = async listId => {\n    if (window.confirm('Are you sure you want to delete this list?')) {\n      try {\n        await axios.delete(`http://localhost:8080/api/todolists/${listId}`);\n        fetchLists();\n      } catch (error) {\n        console.error('Error deleting list:', error);\n      }\n    }\n  };\n  const filteredLists = lists.filter(list => list.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleNewListNameChange = event => {\n    setNewListName(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(ProSidebarProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-manager\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          iconShape: \"square\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            icon: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search...\",\n              value: searchTerm,\n              onChange: handleSearchChange,\n              className: \"search-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => setSelectedListId(list.id),\n            children: [list.name, /*#__PURE__*/_jsxDEV(FaTrash, {\n              className: \"delete-icon\",\n              onClick: () => deleteList(list.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, list.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(SubMenu, {\n            title: \"Create New List\",\n            icon: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 64\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-list-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"New list name\",\n                value: newListName,\n                onChange: handleNewListNameChange,\n                className: \"new-list-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: createList,\n                className: \"create-list-button\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: selectedListId && /*#__PURE__*/_jsxDEV(TodoList, {\n          listId: selectedListId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoListManager, \"t5pP72x9J0+cX/EAxuAzjJjM1sU=\");\n_c = TodoListManager;\nexport default TodoListManager;\nvar _c;\n$RefreshReg$(_c, \"TodoListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoList","Sidebar","Menu","MenuItem","SubMenu","useProSidebar","ProSidebarProvider","FaTrash","FaPlus","FaSearch","jsxDEV","_jsxDEV","TodoListManager","_s","lists","setLists","newListName","setNewListName","selectedListId","setSelectedListId","searchTerm","setSearchTerm","fetchLists","response","get","console","log","data","error","createList","trim","alert","post","name","deleteList","listId","window","confirm","delete","filteredLists","filter","list","toLowerCase","includes","handleSearchChange","event","target","value","handleNewListNameChange","children","className","iconShape","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","onClick","id","title","_c","$RefreshReg$"],"sources":["C:/Users/Cata/Desktop/Proiect-TD/frontend/src/components/TodoListManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TodoList from './TodoList';\r\nimport './TodoListManager.css';\r\nimport { Sidebar, Menu, MenuItem, SubMenu, useProSidebar, ProSidebarProvider } from 'react-pro-sidebar';\r\nimport { FaTrash, FaPlus, FaSearch } from 'react-icons/fa';\r\n\r\nconst TodoListManager = () => {\r\n    const [lists, setLists] = useState([]);\r\n    const [newListName, setNewListName] = useState('');\r\n    const [selectedListId, setSelectedListId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const fetchLists = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/todolists');\r\n            console.log('Response from server:', response.data);\r\n            setLists(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching todo lists:', error);\r\n        }\r\n    };\r\n\r\n    const createList = async () => {\r\n        if (newListName.trim() === '') {\r\n            alert(\"Don't leave it empty\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/todolists', { name: newListName });\r\n            setNewListName('');\r\n            fetchLists();\r\n        } catch (error) {\r\n            console.error('Error creating list:', error);\r\n        }\r\n    };\r\n\r\n    const deleteList = async (listId) => {\r\n        if (window.confirm('Are you sure you want to delete this list?')) {\r\n            try {\r\n                await axios.delete(`http://localhost:8080/api/todolists/${listId}`);\r\n                fetchLists();\r\n            } catch (error) {\r\n                console.error('Error deleting list:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const filteredLists = lists.filter(list =>\r\n        list.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleNewListNameChange = (event) => {\r\n        setNewListName(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <ProSidebarProvider>\r\n            <div className=\"todo-list-manager\">\r\n                <Sidebar>\r\n                    <Menu iconShape=\"square\">\r\n                        <MenuItem icon={<FaSearch />}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search...\"\r\n                                value={searchTerm}\r\n                                onChange={handleSearchChange}\r\n                                className=\"search-input\"\r\n                            />\r\n                        </MenuItem>\r\n                        {filteredLists.map(list => (\r\n                            <MenuItem key={list.id} onClick={() => setSelectedListId(list.id)}>\r\n                                {list.name}\r\n                                <FaTrash className=\"delete-icon\" onClick={() => deleteList(list.id)} />\r\n                            </MenuItem>\r\n                        ))}\r\n                        <SubMenu title=\"Create New List\" icon={<FaPlus />}>\r\n                            <div className=\"create-list-form\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"New list name\"\r\n                                    value={newListName}\r\n                                    onChange={handleNewListNameChange}\r\n                                    className=\"new-list-input\"\r\n                                />\r\n                                <button onClick={createList} className=\"create-list-button\">Create</button>\r\n                            </div>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </Sidebar>\r\n                <main>\r\n                    {selectedListId && (\r\n                        <TodoList listId={selectedListId} />\r\n                    )}\r\n                </main>\r\n            </div>\r\n        </ProSidebarProvider>\r\n    );\r\n};\r\n\r\nexport default TodoListManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}