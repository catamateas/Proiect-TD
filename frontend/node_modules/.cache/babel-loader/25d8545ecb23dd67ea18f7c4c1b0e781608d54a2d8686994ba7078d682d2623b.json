{"ast":null,"code":"var _jsxFileName = \"C:\\\\Faculta\\\\Sem2\\\\TD\\\\todo-frontend\\\\src\\\\components\\\\TodoListManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TodoList from './TodoList';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListManager = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  useEffect(() => {\n    fetchLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/todolists');\n      console.log('Response from server:', response.data);\n      if (Array.isArray(response.data)) {\n        setLists(response.data);\n      } else {\n        console.error('Response data is not an array:', response.data);\n        setLists([]);\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n      setLists([]);\n    }\n  };\n  const handleCreateList = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/todolists', {\n        name: newListName\n      });\n      setLists([...lists, response.data]);\n      setNewListName('');\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n  const handleDeleteList = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/todolists/${id}`);\n      setLists(lists.filter(list => list.id !== id));\n      if (selectedListId === id) {\n        setSelectedListId(null);\n      }\n    } catch (error) {\n      console.error('Error deleting list:', error);\n    }\n  };\n  const handleSelectList = id => {\n    setSelectedListId(id);\n  };\n  const selectedList = lists.find(list => list.id === selectedListId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          lists: lists,\n          onSelectList: handleSelectList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-9\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center my-4\",\n          children: \"Todo List Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: newListName,\n            onChange: e => setNewListName(e.target.value),\n            placeholder: \"New List Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-2\",\n            onClick: handleCreateList,\n            children: \"Create List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(TodoList, {\n          list: selectedList,\n          onDelete: handleDeleteList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoListManager, \"OIhv5bzLCyupYJHnCLB0mnyhVRg=\");\n_c = TodoListManager;\nexport default TodoListManager;\nvar _c;\n$RefreshReg$(_c, \"TodoListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoList","Sidebar","jsxDEV","_jsxDEV","TodoListManager","_s","lists","setLists","newListName","setNewListName","selectedListId","setSelectedListId","fetchLists","response","get","console","log","data","Array","isArray","error","handleCreateList","post","name","handleDeleteList","id","delete","filter","list","handleSelectList","selectedList","find","className","children","onSelectList","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","onDelete","_c","$RefreshReg$"],"sources":["C:/Faculta/Sem2/TD/todo-frontend/src/components/TodoListManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TodoList from './TodoList';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst TodoListManager = () => {\r\n    const [lists, setLists] = useState([]);\r\n    const [newListName, setNewListName] = useState('');\r\n    const [selectedListId, setSelectedListId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const fetchLists = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/todolists');\r\n            console.log('Response from server:', response.data);\r\n            if (Array.isArray(response.data)) {\r\n                setLists(response.data);\r\n            } else {\r\n                console.error('Response data is not an array:', response.data);\r\n                setLists([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching lists:', error);\r\n            setLists([]);\r\n        }\r\n    };\r\n\r\n    const handleCreateList = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/todolists', { name: newListName });\r\n            setLists([...lists, response.data]);\r\n            setNewListName('');\r\n        } catch (error) {\r\n            console.error('Error creating list:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteList = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/api/todolists/${id}`);\r\n            setLists(lists.filter(list => list.id !== id));\r\n            if (selectedListId === id) {\r\n                setSelectedListId(null);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting list:', error);\r\n        }\r\n    };\r\n\r\n    const handleSelectList = (id) => {\r\n        setSelectedListId(id);\r\n    };\r\n\r\n    const selectedList = lists.find(list => list.id === selectedListId);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <Sidebar lists={lists} onSelectList={handleSelectList} />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <h1 className=\"text-center my-4\">Todo List Manager</h1>\r\n                    <div className=\"mb-4\">\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={newListName}\r\n                            onChange={(e) => setNewListName(e.target.value)}\r\n                            placeholder=\"New List Name\"\r\n                        />\r\n                        <button className=\"btn btn-primary mt-2\" onClick={handleCreateList}>Create List</button>\r\n                    </div>\r\n                    {selectedList && <TodoList list={selectedList} onDelete={handleDeleteList} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}