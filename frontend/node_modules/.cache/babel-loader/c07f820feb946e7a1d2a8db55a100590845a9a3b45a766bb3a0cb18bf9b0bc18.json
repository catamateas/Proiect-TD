{"ast":null,"code":"var _jsxFileName = \"C:\\\\Faculta\\\\Sem2\\\\TD\\\\todo-frontend\\\\src\\\\components\\\\TodoListManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TodoList from './TodoList';\nimport Sidebar from './Sidebar';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListManager = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/todolists');\n      if (Array.isArray(response.data)) {\n        setLists(response.data);\n      } else {\n        console.error('Response data is not an array:', response.data);\n        setLists([]);\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n      setLists([]);\n      toast.error('Error fetching lists');\n    }\n  };\n  const handleCreateList = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/todolists', {\n        name: newListName\n      });\n      setLists([...lists, response.data]);\n      setNewListName('');\n      toast.success('List created successfully');\n    } catch (error) {\n      console.error('Error creating list:', error);\n      toast.error('Error creating list');\n    }\n  };\n  const handleDeleteList = async id => {\n    if (window.confirm('Are you sure you want to delete this list?')) {\n      try {\n        await axios.delete(`http://localhost:8080/api/todolists/${id}`);\n        setLists(lists.filter(list => list.id !== id));\n        if (selectedListId === id) {\n          setSelectedListId(null);\n        }\n        toast.success('List deleted successfully');\n      } catch (error) {\n        console.error('Error deleting list:', error);\n        toast.error('Error deleting list');\n      }\n    }\n  };\n  const handleSelectList = id => {\n    setSelectedListId(id);\n  };\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const filteredLists = lists.filter(list => list.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const selectedList = lists.find(list => list.id === selectedListId);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: isSidebarOpen ? 3 : 1,\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          lists: filteredLists,\n          onSelectList: handleSelectList,\n          isOpen: isSidebarOpen,\n          toggleSidebar: toggleSidebar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: isSidebarOpen ? 9 : 11,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center my-4\",\n          children: \"Todo List Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          inline: true,\n          className: \"mb-4\",\n          onSubmit: e => {\n            e.preventDefault();\n            handleCreateList();\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            className: \"mr-2\",\n            value: newListName,\n            onChange: e => setNewListName(e.target.value),\n            placeholder: \"New List Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"mt-2\",\n            children: \"Create List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"mb-2\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Search Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(TodoList, {\n          list: selectedList,\n          onDelete: handleDeleteList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoListManager, \"znBDKwOtofIAXbonnnh3uCS0Yxg=\");\n_c = TodoListManager;\nexport default TodoListManager;\nvar _c;\n$RefreshReg$(_c, \"TodoListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoList","Sidebar","Container","Row","Col","Form","Button","toast","jsxDEV","_jsxDEV","TodoListManager","_s","lists","setLists","newListName","setNewListName","selectedListId","setSelectedListId","isSidebarOpen","setIsSidebarOpen","searchTerm","setSearchTerm","fetchLists","response","get","Array","isArray","data","console","error","handleCreateList","post","name","success","handleDeleteList","id","window","confirm","delete","filter","list","handleSelectList","toggleSidebar","filteredLists","toLowerCase","includes","selectedList","find","fluid","children","xs","className","onSelectList","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","inline","onSubmit","e","preventDefault","Control","type","value","onChange","target","placeholder","onDelete","_c","$RefreshReg$"],"sources":["C:/Faculta/Sem2/TD/todo-frontend/src/components/TodoListManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TodoList from './TodoList';\r\nimport Sidebar from './Sidebar';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TodoListManager = () => {\r\n    const [lists, setLists] = useState([]);\r\n    const [newListName, setNewListName] = useState('');\r\n    const [selectedListId, setSelectedListId] = useState(null);\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const fetchLists = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/todolists');\r\n            if (Array.isArray(response.data)) {\r\n                setLists(response.data);\r\n            } else {\r\n                console.error('Response data is not an array:', response.data);\r\n                setLists([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching lists:', error);\r\n            setLists([]);\r\n            toast.error('Error fetching lists');\r\n        }\r\n    };\r\n\r\n    const handleCreateList = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/todolists', { name: newListName });\r\n            setLists([...lists, response.data]);\r\n            setNewListName('');\r\n            toast.success('List created successfully');\r\n        } catch (error) {\r\n            console.error('Error creating list:', error);\r\n            toast.error('Error creating list');\r\n        }\r\n    };\r\n\r\n    const handleDeleteList = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this list?')) {\r\n            try {\r\n                await axios.delete(`http://localhost:8080/api/todolists/${id}`);\r\n                setLists(lists.filter(list => list.id !== id));\r\n                if (selectedListId === id) {\r\n                    setSelectedListId(null);\r\n                }\r\n                toast.success('List deleted successfully');\r\n            } catch (error) {\r\n                console.error('Error deleting list:', error);\r\n                toast.error('Error deleting list');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSelectList = (id) => {\r\n        setSelectedListId(id);\r\n    };\r\n\r\n    const toggleSidebar = () => {\r\n        setIsSidebarOpen(!isSidebarOpen);\r\n    };\r\n\r\n    const filteredLists = lists.filter(list =>\r\n        list.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    const selectedList = lists.find(list => list.id === selectedListId);\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col xs={isSidebarOpen ? 3 : 1} className=\"p-0\">\r\n                    <Sidebar lists={filteredLists} onSelectList={handleSelectList} isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n                <Col xs={isSidebarOpen ? 9 : 11}>\r\n                    <h1 className=\"text-center my-4\">Todo List Manager</h1>\r\n                    <Form inline className=\"mb-4\" onSubmit={(e) => { e.preventDefault(); handleCreateList(); }}>\r\n                        <Form.Control \r\n                            type=\"text\"\r\n                            className=\"mr-2\"\r\n                            value={newListName}\r\n                            onChange={(e) => setNewListName(e.target.value)}\r\n                            placeholder=\"New List Name\"\r\n                        />\r\n                        <Button type=\"submit\" className=\"mt-2\">Create List</Button>\r\n                    </Form>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        className=\"mb-2\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        placeholder=\"Search Lists\"\r\n                    />\r\n                    {selectedList && <TodoList list={selectedList} onDelete={handleDeleteList} />}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TodoListManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}