{"ast":null,"code":"var _jsxFileName = \"C:\\\\Faculta\\\\Sem2\\\\TD\\\\todo-frontend\\\\src\\\\components\\\\TodoListManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListManager = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  useEffect(() => {\n    fetchLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/todolists');\n      console.log('Response from server:', response.data);\n      if (Array.isArray(response.data)) {\n        setLists(response.data);\n      } else {\n        console.error('Response data is not an array:', response.data);\n        setLists([]);\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n      setLists([]);\n    }\n  };\n  const handleCreateList = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/todolists', {\n        name: newListName\n      });\n      setLists([...lists, response.data]);\n      setNewListName('');\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n  const handleDeleteList = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/todolists/${id}`);\n      setLists(lists.filter(list => list.id !== id));\n    } catch (error) {\n      console.error('Error deleting list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: \"Todo List Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: newListName,\n        onChange: e => setNewListName(e.target.value),\n        placeholder: \"New List Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: handleCreateList,\n        children: \"Create List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), Array.isArray(lists) && lists.map(list => /*#__PURE__*/_jsxDEV(TodoList, {\n      list: list,\n      onDelete: handleDeleteList\n    }, list.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoListManager, \"6Hr07C+DfgBlOlvvbilRPVp8qRg=\");\n_c = TodoListManager;\nexport default TodoListManager;\nvar _c;\n$RefreshReg$(_c, \"TodoListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoList","jsxDEV","_jsxDEV","TodoListManager","_s","lists","setLists","newListName","setNewListName","fetchLists","response","get","console","log","data","Array","isArray","error","handleCreateList","post","name","handleDeleteList","id","delete","filter","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","onDelete","_c","$RefreshReg$"],"sources":["C:/Faculta/Sem2/TD/todo-frontend/src/components/TodoListManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TodoList from './TodoList';\r\n\r\nconst TodoListManager = () => {\r\n    const [lists, setLists] = useState([]);\r\n    const [newListName, setNewListName] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const fetchLists = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/todolists');\r\n            console.log('Response from server:', response.data);\r\n            if (Array.isArray(response.data)) {\r\n                setLists(response.data);\r\n            } else {\r\n                console.error('Response data is not an array:', response.data);\r\n                setLists([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching lists:', error);\r\n            setLists([]);\r\n        }\r\n    };\r\n\r\n    const handleCreateList = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/todolists', { name: newListName });\r\n            setLists([...lists, response.data]);\r\n            setNewListName('');\r\n        } catch (error) {\r\n            console.error('Error creating list:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteList = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/api/todolists/${id}`);\r\n            setLists(lists.filter(list => list.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting list:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-center my-4\">Todo List Manager</h1>\r\n            <div className=\"mb-4\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={newListName}\r\n                    onChange={(e) => setNewListName(e.target.value)}\r\n                    placeholder=\"New List Name\"\r\n                />\r\n                <button className=\"btn btn-primary mt-2\" onClick={handleCreateList}>Create List</button>\r\n            </div>\r\n            {Array.isArray(lists) && lists.map(list => (\r\n                <TodoList key={list.id} list={list} onDelete={handleDeleteList} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}