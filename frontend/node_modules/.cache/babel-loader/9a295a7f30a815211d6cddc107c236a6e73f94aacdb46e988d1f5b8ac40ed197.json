{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cata\\\\Desktop\\\\Proiect-TD\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  listId\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  useEffect(() => {\n    fetchTodos();\n  }, [listId]);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/todos/${listId}`);\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const createTodo = async () => {\n    if (newTodoTitle.trim() === '') {\n      alert(\"Don't leave it empty\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/api/todos/${listId}`, {\n        title: newTodoTitle\n      });\n      setNewTodoTitle('');\n      fetchTodos();\n    } catch (error) {\n      console.error('Error creating todo:', error);\n    }\n  };\n  const deleteTodo = async todoId => {\n    try {\n      await axios.delete(`http://localhost:8080/api/todos/${todoId}`);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  const toggleCompletion = async todo => {\n    try {\n      const updatedTodo = {\n        ...todo,\n        completed: !todo.completed\n      };\n      await axios.put(`http://localhost:8080/api/todos/${todo.id}`, updatedTodo);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New todo\",\n      value: newTodoTitle,\n      onChange: e => setNewTodoTitle(e.target.value),\n      className: \"new-todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createTodo,\n      className: \"create-todo-button\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: todo.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleCompletion(todo),\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          className: \"delete-todo-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"YLXruQ/jWGQyFcXebXsY+diE8M0=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TodoList","listId","_s","todos","setTodos","newTodoTitle","setNewTodoTitle","fetchTodos","response","get","data","error","console","createTodo","trim","alert","post","title","deleteTodo","todoId","delete","toggleCompletion","todo","updatedTodo","completed","put","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Cata/Desktop/Proiect-TD/frontend/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ listId }) => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [newTodoTitle, setNewTodoTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, [listId]);\r\n\r\n    const fetchTodos = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/api/todos/${listId}`);\r\n            setTodos(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching todos:', error);\r\n        }\r\n    };\r\n\r\n    const createTodo = async () => {\r\n        if (newTodoTitle.trim() === '') {\r\n            alert(\"Don't leave it empty\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(`http://localhost:8080/api/todos/${listId}`, { title: newTodoTitle });\r\n            setNewTodoTitle('');\r\n            fetchTodos();\r\n        } catch (error) {\r\n            console.error('Error creating todo:', error);\r\n        }\r\n    };\r\n\r\n    const deleteTodo = async (todoId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/api/todos/${todoId}`);\r\n            fetchTodos();\r\n        } catch (error) {\r\n            console.error('Error deleting todo:', error);\r\n        }\r\n    };\r\n\r\n    const toggleCompletion = async (todo) => {\r\n        try {\r\n            const updatedTodo = { ...todo, completed: !todo.completed };\r\n            await axios.put(`http://localhost:8080/api/todos/${todo.id}`, updatedTodo);\r\n            fetchTodos();\r\n        } catch (error) {\r\n            console.error('Error updating todo:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <h2>Todo List</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"New todo\"\r\n                value={newTodoTitle}\r\n                onChange={(e) => setNewTodoTitle(e.target.value)}\r\n                className=\"new-todo-input\"\r\n            />\r\n            <button onClick={createTodo} className=\"create-todo-button\">Add</button>\r\n            <ul>\r\n                {todos.map(todo => (\r\n                    <li key={todo.id} className={todo.completed ? 'completed' : ''}>\r\n                        <span onClick={() => toggleCompletion(todo)}>{todo.title}</span>\r\n                        <button onClick={() => deleteTodo(todo.id)} className=\"delete-todo-button\">Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}